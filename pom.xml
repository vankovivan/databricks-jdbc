<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0" xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
  <modelVersion>4.0.0</modelVersion>
  <groupId>com.databricks</groupId>
  <artifactId>databricks-jdbc</artifactId>
  <!-- This value may be modified by a release script to reflect the current version of the driver. -->
  <version>3.0.1</version>
  <packaging>jar</packaging>
  <name>Databricks JDBC Driver</name>
  <description>Databricks JDBC Driver.</description>
  <url>https://github.com/databricks/databricks-jdbc</url>
  <licenses>
    <license>
      <name>Apache License, Version 2.0</name>
      <url>https://github.com/databricks/databricks-jdbc/blob/main/LICENSE</url>
    </license>
  </licenses>
  <developers>
    <developer>
      <name>Databricks JDBC Team</name>
      <email>eng-oss-sql-driver@databricks.com</email>
      <organization>Databricks</organization>
      <organizationUrl>https://www.databricks.com</organizationUrl>
    </developer>
  </developers>
  <scm>
    <connection>scm:git:https://github.com/databricks/databricks-jdbc.git</connection>
    <developerConnection>scm:git:https://github.com/databricks/databricks-jdbc.git</developerConnection>
    <url>https://github.com/databricks/databricks-jdbc</url>
  </scm>
  <issueManagement>
    <system>GitHub Issues</system>
    <url>https://github.com/databricks/databricks-jdbc/issues</url>
  </issueManagement>
  <distributionManagement>
    <repository>
      <id>local-test-repo</id>
      <url>file://${project.build.directory}/local-repo</url>
    </repository>
  </distributionManagement>
  <properties>
    <arrow.version>17.0.0</arrow.version>
    <commons-lang3.version>3.18.0</commons-lang3.version>
    <maven.compiler.source>11</maven.compiler.source>
    <maven.compiler.target>11</maven.compiler.target>
    <mockito.version>5.2.0</mockito.version>
    <jackson.version>2.18.3</jackson.version>
    <log4j.version>2.22.1</log4j.version>
    <slf4j.version>2.0.13</slf4j.version>
    <google.guava.version>33.0.0-jre</google.guava.version>
    <junit.jupiter.version>5.9.2</junit.jupiter.version>
    <google.findbugs.annotations.version>3.0.1</google.findbugs.annotations.version>
    <gson.version>2.13.2</gson.version>
    <immutables.value.version>2.9.2</immutables.value.version>
    <httpclient.version>4.5.14</httpclient.version>
    <commons-configuration.version>2.10.1</commons-configuration.version>
    <commons-io.version>2.14.0</commons-io.version>
    <databricks-sdk.version>0.65.0</databricks-sdk.version>
    <maven-surefire-plugin.version>3.1.2</maven-surefire-plugin.version>
    <sql-logic-test.version>0.3</sql-logic-test.version>
    <lz4-compression.version>1.8.0</lz4-compression.version>
    <thrift.version>0.19.0</thrift.version>
    <annotation.version>1.3.5</annotation.version>
    <slt.executor>dbsql</slt.executor>
    <slt.token>dummy-token</slt.token>
    <wiremock.version>3.5.4</wiremock.version>
    <nimbusjose.version>10.0.2</nimbusjose.version>
    <bouncycastle.version>1.79</bouncycastle.version>
    <async-httpclient.version>5.3.1</async-httpclient.version>
    <netty.version>4.2.6.Final</netty.version>
    <grpc.version>1.71.0</grpc.version>
    <resilience4j.version>1.7.0</resilience4j.version>
  </properties>
  <dependencyManagement>
    <!-- Force safe version of commons-lang3 https://nvd.nist.gov/vuln/detail/CVE-2025-48924 -->
    <dependencies>
      <dependency>
        <groupId>org.apache.commons</groupId>
        <artifactId>commons-lang3</artifactId>
        <version>${commons-lang3.version}</version>
      </dependency>
      <!-- Force safe version of Gson to fix CVE-2025-53864 -->
      <dependency>
        <groupId>com.google.code.gson</groupId>
        <artifactId>gson</artifactId>
        <version>${gson.version}</version>
      </dependency>
    </dependencies>
  </dependencyManagement>
  <dependencies>
    <dependency>
      <groupId>com.databricks</groupId>
      <artifactId>databricks-sdk-java</artifactId>
      <version>${databricks-sdk.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.commons</groupId>
      <artifactId>commons-configuration2</artifactId>
      <version>${commons-configuration.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.arrow</groupId>
      <artifactId>arrow-memory-core</artifactId>
      <version>${arrow.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.arrow</groupId>
      <artifactId>arrow-memory-unsafe</artifactId>
      <version>${arrow.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.arrow</groupId>
      <artifactId>arrow-vector</artifactId>
      <version>${arrow.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.arrow</groupId>
      <artifactId>arrow-memory-netty</artifactId>
      <version>${arrow.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents</groupId>
      <artifactId>httpclient</artifactId>
      <version>${httpclient.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.thrift</groupId>
      <artifactId>libthrift</artifactId>
      <version>${thrift.version}</version>
    </dependency>
    <dependency>
      <groupId>org.slf4j</groupId>
      <artifactId>slf4j-api</artifactId>
      <version>${slf4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-slf4j2-impl</artifactId>
      <version>${log4j.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-core</artifactId>
      <version>${log4j.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.apache.logging.log4j</groupId>
      <artifactId>log4j-api</artifactId>
      <version>${log4j.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>commons-io</groupId>
      <artifactId>commons-io</artifactId>
      <version>${commons-io.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.code.findbugs</groupId>
      <artifactId>annotations</artifactId>
      <version>${google.findbugs.annotations.version}</version>
    </dependency>
    <dependency>
      <groupId>com.google.guava</groupId>
      <artifactId>guava</artifactId>
      <version>${google.guava.version}</version>
    </dependency>
    <dependency>
      <groupId>org.junit.jupiter</groupId>
      <artifactId>junit-jupiter</artifactId>
      <version>${junit.jupiter.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.nimbusds</groupId>
      <artifactId>nimbus-jose-jwt</artifactId>
      <version>${nimbusjose.version}</version>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcprov-jdk18on</artifactId>
      <version>${bouncycastle.version}</version>
    </dependency>
    <dependency>
      <groupId>org.bouncycastle</groupId>
      <artifactId>bcpkix-jdk18on</artifactId>
      <version>${bouncycastle.version}</version>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-inline</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.mockito</groupId>
      <artifactId>mockito-junit-jupiter</artifactId>
      <version>${mockito.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-databind</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-annotations</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>com.fasterxml.jackson.core</groupId>
      <artifactId>jackson-core</artifactId>
      <version>${jackson.version}</version>
    </dependency>
    <dependency>
      <groupId>org.immutables</groupId>
      <artifactId>value</artifactId>
      <version>${immutables.value.version}</version>
      <scope>provided</scope>
    </dependency>
    <dependency>
      <groupId>net.hydromatic</groupId>
      <artifactId>sql-logic-test</artifactId>
      <version>${sql-logic-test.version}</version>
      <scope>test</scope>
    </dependency>
    <dependency>
      <groupId>org.lz4</groupId>
      <artifactId>lz4-java</artifactId>
      <version>${lz4-compression.version}</version>
    </dependency>
    <!-- The following dependency is added as a workaround to CVE-2023-33953-->
    <dependency>
      <groupId>io.grpc</groupId>
      <artifactId>grpc-context</artifactId>
      <version>${grpc.version}</version>
    </dependency>
    <!-- The following dependency is added as a workaround to CVE-2025-25193-->
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-common</artifactId>
      <version>${netty.version}</version>
    </dependency>
    <!-- The following dependency is added as a workaround to CVE-2024-49194-->
    <dependency>
      <groupId>io.netty</groupId>
      <artifactId>netty-buffer</artifactId>
      <version>${netty.version}</version>
    </dependency>
    <dependency>
      <groupId>jakarta.annotation</groupId>
      <artifactId>jakarta.annotation-api</artifactId>
      <version>${annotation.version}</version>
    </dependency>
    <dependency>
      <groupId>org.wiremock</groupId>
      <artifactId>wiremock</artifactId>
      <version>${wiremock.version}</version>
      <scope>test</scope>
      <exclusions>
        <exclusion>
          <groupId>commons-fileupload</groupId>
          <artifactId>commons-fileupload</artifactId>
        </exclusion>
      </exclusions>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents.client5</groupId>
      <artifactId>httpclient5</artifactId>
      <version>${async-httpclient.version}</version>
    </dependency>
    <dependency>
      <groupId>org.apache.httpcomponents.core5</groupId>
      <artifactId>httpcore5</artifactId>
      <version>${async-httpclient.version}</version>
    </dependency>
    <dependency>
      <groupId>io.github.resilience4j</groupId>
      <artifactId>resilience4j-circuitbreaker</artifactId>
      <version>${resilience4j.version}</version>
    </dependency>
    <dependency>
      <groupId>io.github.resilience4j</groupId>
      <artifactId>resilience4j-core</artifactId>
      <version>${resilience4j.version}</version>
    </dependency>
    <dependency>
      <groupId>org.locationtech.jts</groupId>
      <artifactId>jts-core</artifactId>
      <version>1.20.0</version>
    </dependency>
  </dependencies>

  <build>
    <!-- The build process produces the following artifacts in the target directory:
       - Shaded uber JAR (default): ${project.artifactId}-${project.version}.jar
       - Thin JAR without dependencies: ${project.artifactId}-${project.version}-thin.jar
       - Test JAR containing test classes: ${project.artifactId}-${project.version}-tests.jar
       - Sources JAR (when 'release' profile is active): ${project.artifactId}-${project.version}-sources.jar
       - Javadoc JAR (when 'release' profile is active): ${project.artifactId}-${project.version}-javadoc.jar
    -->
    <finalName>${project.artifactId}-${project.version}</finalName>
    <plugins>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-jar-plugin</artifactId>
        <version>3.3.0</version>
        <configuration>
          <archive>
            <manifest>
              <mainClass>com.databricks.client.jdbc.Driver</mainClass>
              <addDefaultImplementationEntries>true</addDefaultImplementationEntries>
            </manifest>
          </archive>
        </configuration>
        <executions>
          <execution>
            <id>attach-thin-jar</id>
            <phase>package</phase>
            <goals>
              <goal>jar</goal>
            </goals>
            <configuration>
              <classifier>thin</classifier>
            </configuration>
          </execution>
          <execution>
            <id>attach-test-jar</id>
            <goals>
              <goal>test-jar</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-surefire-plugin</artifactId>
        <version>${maven-surefire-plugin.version}</version>
        <configuration>
          <excludes>
            <exclude>**/DatabricksDriverExamples.java</exclude>
            <exclude>**/integration/**/*.java</exclude>
            <exclude>**/ErrorTypes.java</exclude>
            <exclude>**/ErrorCodes.java</exclude>
            <exclude>**/ProxyTest.java</exclude>
            <exclude>**/LoggingTest.java</exclude>
            <exclude>**/SSLTest.java</exclude>
          </excludes>
          <argLine>
            @{argLine}
            --add-opens=java.base/java.nio=ALL-UNNAMED
            -Dnet.bytebuddy.experimental=true
          </argLine>
          <systemPropertyVariables>
            <com.databricks.jdbc.loggerImpl>JDKLOGGER</com.databricks.jdbc.loggerImpl>
            <java.util.logging.config.file>${project.basedir}/src/test/resources/logging.properties</java.util.logging.config.file>
          </systemPropertyVariables>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.codehaus.mojo</groupId>
        <artifactId>exec-maven-plugin</artifactId>
        <version>1.2.1</version>
        <configuration>
          <executable>java</executable>
          <arguments>
            <argument>--add-opens=java.base/java.nio=ALL-UNNAMED</argument>
            <argument>-classpath</argument>
            <classpath />
            <argument>com.databricks.jdbc.sqllogictest.SLTMain</argument>
            <argument>-e</argument>
            <argument>${slt.executor}</argument>
            <argument>-p</argument>
            <argument>${slt.token}</argument>
          </arguments>
          <classpathScope>test</classpathScope>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-compiler-plugin</artifactId>
        <configuration>
          <annotationProcessorPaths>
            <path>
              <groupId>org.immutables</groupId>
              <artifactId>value</artifactId>
              <version>${immutables.value.version}</version>
            </path>
          </annotationProcessorPaths>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.owasp</groupId>
        <artifactId>dependency-check-maven</artifactId>
        <version>12.1.6</version>
        <configuration>
          <formats>
            <format>HTML</format>
            <format>JSON</format>
          </formats>
            <!--
              Setting threshold to 7.0 to catch both Critical (8.0-10.0) and High (7.0-7.9) severity vulnerabilities.
              This helps us identify and address significant security risks early in the development process.
           -->
          <failBuildOnCVSS>7</failBuildOnCVSS>
          <nvdApiKey>${nvd.api.key}</nvdApiKey>
          <nvdMaxRetryCount>10</nvdMaxRetryCount>
          <nvdApiDelay>4000</nvdApiDelay>
          <ossindexAnalyzerEnabled>true</ossindexAnalyzerEnabled>
          <ossindexUsername>${ossindex.username}</ossindexUsername>
          <ossindexPassword>${ossindex.password}</ossindexPassword>
        </configuration>
        <executions>
          <execution>
            <goals>
              <goal>check</goal>
            </goals>
          </execution>
        </executions>
      </plugin>
      <plugin>
        <groupId>com.diffplug.spotless</groupId>
        <artifactId>spotless-maven-plugin</artifactId>
        <version>2.39.0</version>
        <executions>
          <execution>
            <id>format</id>
            <goals>
              <goal>apply</goal>
            </goals>
            <phase>compile</phase>
          </execution>
        </executions>
        <configuration>
          <java>
            <googleJavaFormat>
              <version>1.18.1</version>
            </googleJavaFormat>
          </java>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.jacoco</groupId>
        <artifactId>jacoco-maven-plugin</artifactId>
        <version>0.8.11</version>
        <executions>
          <execution>
            <goals>
              <goal>prepare-agent</goal>
            </goals>
          </execution>
          <execution>
            <id>report</id>
            <phase>prepare-package</phase>
            <goals>
              <goal>report</goal>
            </goals>
          </execution>
        </executions>
        <configuration>
          <excludes>
            <exclude>**/*Constants*</exclude>
            <exclude>**/*Exception*</exclude>
            <exclude>**/CommandName*</exclude>
            <exclude>**/DatabricksJdbcConstants*</exclude>
            <exclude>**/DatabricksJdbcUrlParams*</exclude>
            <exclude>**/Driver*</exclude>
            <exclude>**/EnvironmentVariables*</exclude>
            <exclude>**/model/**</exclude>
            <exclude>**/thrift/generated/**</exclude>
          </excludes>
        </configuration>
      </plugin>
      <plugin>
        <groupId>org.apache.maven.plugins</groupId>
        <artifactId>maven-shade-plugin</artifactId>
        <version>3.5.0</version>
        <dependencies>
          <dependency>
            <groupId>org.apache.logging.log4j</groupId>
            <artifactId>log4j-transform-maven-shade-plugin-extensions</artifactId>
            <version>0.1.0</version>
          </dependency>
        </dependencies>
        <executions>
          <execution>
            <id>shade and package jars</id>
            <phase>package</phase>
            <goals>
              <goal>shade</goal>
            </goals>
            <configuration>
              <!-- The shaded uber jar is the default jar produced by this build -->
              <shadedArtifactAttached>false</shadedArtifactAttached>
              <relocations>
                <relocation>
                  <pattern>codegen</pattern>
                  <shadedPattern>com.databricks.internal.codegen</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.databricks.sdk</pattern>
                  <shadedPattern>com.databricks.internal.sdk</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.fasterxml</pattern>
                  <shadedPattern>com.databricks.internal.fasterxml</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.google</pattern>
                  <shadedPattern>com.databricks.internal.google</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>com.nimbusds</pattern>
                  <shadedPattern>com.databricks.internal.nimbusds</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>io</pattern>
                  <shadedPattern>com.databricks.internal.io</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>net.jpountz</pattern>
                  <shadedPattern>com.databricks.internal.jpountz</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.apache</pattern>
                  <shadedPattern>com.databricks.internal.apache</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.bouncycastle</pattern>
                  <shadedPattern>com.databricks.internal.bouncycastle</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.checkerframework</pattern>
                  <shadedPattern>com.databricks.internal.checkerframework</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.ini4j</pattern>
                  <shadedPattern>com.databricks.internal.ini4j</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.json</pattern>
                  <shadedPattern>com.databricks.internal.json</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.locationtech.jts</pattern>
                  <shadedPattern>com.databricks.internal.jts</shadedPattern>
                </relocation>
                <relocation>
                  <pattern>org.osgi</pattern>
                  <shadedPattern>com.databricks.internal.osgi</shadedPattern>
                </relocation>
              </relocations>
              <filters>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>META-INF/*.DSA</exclude>
                    <exclude>META-INF/*.RSA</exclude>
                    <exclude>META-INF/*.SF</exclude>
                    <exclude>META-INF/DEPENDENCIES</exclude>
                    <exclude>META-INF/LICENSE.txt</exclude>
                    <exclude>META-INF/versions/**</exclude>
                  </excludes>
                </filter>
                <filter>
                  <artifact>*:*</artifact>
                  <excludes>
                    <exclude>edu/**</exclude>
                    <exclude>javax/**</exclude>
                    <exclude>jakarta/**</exclude>
                    <exclude>net/jcip/**</exclude>
                    <exclude>oauth/**</exclude>
                  </excludes>
                </filter>
              </filters>
              <transformers>
                <transformer implementation="org.apache.logging.log4j.maven.plugins.shade.transformer.Log4j2PluginCacheFileTransformer"/>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                  <mainClass>com.databricks.client.jdbc.Driver</mainClass>
                  <manifestEntries>
                    <Implementation-Title>${project.artifactId}</Implementation-Title>
                    <Implementation-Version>${project.version}</Implementation-Version>
                  </manifestEntries>
                </transformer>
                <transformer implementation="org.apache.maven.plugins.shade.resource.ServicesResourceTransformer"/>
              </transformers>
            </configuration>
          </execution>
        </executions>
      </plugin>
    </plugins>
  </build>
  <profiles>
    <profile>
      <!-- Local deploy for testing -->
      <id>local-deploy</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-deploy-plugin</artifactId>
            <version>2.8.2</version>
            <executions>
              <!-- Skip the default deploy execution -->
              <execution>
                <id>skip-default-deploy</id>
                <phase>deploy</phase>
                <goals>
                  <goal>deploy</goal>
                </goals>
                <configuration>
                  <skip>true</skip>
                </configuration>
              </execution>
              <!-- Use deploy-file goal to deploy with custom POM -->
              <execution>
                <id>deploy-with-custom-pom</id>
                <phase>deploy</phase>
                <goals>
                  <goal>deploy-file</goal>
                </goals>
                <configuration>
                  <file>${project.build.directory}/${project.build.finalName}.jar</file>
                  <pomFile>${project.basedir}/uber-minimal-pom.xml</pomFile>
                  <!-- Include other artifacts like sources and javadocs -->
                  <files>${project.build.directory}/${project.build.finalName}-thin.jar</files>
                  <types>jar</types>
                  <classifiers>thin</classifiers>
                  <!-- Use repository details from distributionManagement -->
                  <repositoryId>local-test-repo</repositoryId>
                  <url>file://${project.build.directory}/local-repo</url>
                </configuration>
              </execution>
            </executions>
          </plugin>
        </plugins>
      </build>
    </profile>
    <profile>
      <id>release</id>
      <build>
        <plugins>
          <plugin>
            <groupId>org.codehaus.mojo</groupId>
            <artifactId>build-helper-maven-plugin</artifactId>
            <version>3.6.1</version>
            <executions>
              <execution>
                <id>attach-uber-minimal-pom</id>
                <goals>
                  <goal>attach-artifact</goal>
                </goals>
                <phase>package</phase>
                <configuration>
                  <artifacts>
                    <artifact>
                      <file>${project.basedir}/uber-minimal-pom.xml</file>
                      <type>pom</type>
                    </artifact>
                  </artifacts>
                </configuration>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-source-plugin</artifactId>
            <version>3.3.1</version>
            <executions>
              <execution>
                <id>attach-sources</id>
                <goals>
                  <goal>jar-no-fork</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-javadoc-plugin</artifactId>
            <version>3.8.0</version>
            <configuration>
              <doclint>none</doclint>
              <sourcepath>${project.build.sourceDirectory}:${project.build.directory}/generated-sources/annotations</sourcepath>
            </configuration>
            <executions>
              <execution>
                <id>attach-javadocs</id>
                <goals>
                  <goal>jar</goal>
                </goals>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.apache.maven.plugins</groupId>
            <artifactId>maven-gpg-plugin</artifactId>
            <version>1.6</version>
            <configuration>
              <gpgArguments>
                <arg>--pinentry-mode</arg>
                <arg>loopback</arg>
              </gpgArguments>
              <passphrase>${env.GPG_PASSPHRASE}</passphrase>
            </configuration>
            <executions>
              <execution>
                <id>sign-artifacts</id>
                <goals>
                  <goal>sign</goal>
                </goals>
                <phase>verify</phase>
              </execution>
            </executions>
          </plugin>
          <plugin>
            <groupId>org.sonatype.central</groupId>
            <artifactId>central-publishing-maven-plugin</artifactId>
            <version>0.8.0</version>
            <extensions>true</extensions>
            <configuration>
              <publishingServerId>central</publishingServerId>
              <autoPublish>true</autoPublish>
              <waitUntil>published</waitUntil>
            </configuration>
          </plugin>
        </plugins>
      </build>
    </profile>
    
  </profiles>
  
</project>
